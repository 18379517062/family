<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.family.mapper.itemMapper">
  <resultMap id="BaseResultMap" type="com.family.entity.item">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="categoryId" jdbcType="INTEGER" property="categoryId" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="currencyName" jdbcType="VARCHAR" property="currencyName" />
    <result column="accountId" jdbcType="INTEGER" property="accountId" />
    <result column="createTime" jdbcType="DATE" property="createTime" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
<!--      <association property="user" javaType="com.family.entity.user" column="userId">-->
<!--          <id property="id" column="userId"></id>-->
<!--          <result property="userName" column="userName"></result>-->
<!--      </association>-->
    <association property="category" javaType="com.family.entity.category" column="categoryId">
        <id property="id" column="categoryId"></id>
        <result property="categoryName" column="categoryName"></result>
        <result property="status" column="status"></result>
    </association>
    <association property="account" javaType="com.family.entity.account" column="accountId">
        <id property="id" column="accountId"></id>
        <result property="userId" column="userId"></result>
        <result property="accountName" column="accountName"></result>
        <result property="accountMoney" column="accountMoney"></result>
    </association>
  </resultMap>

  <sql id="Base_Column_List">
    id, status,title, userId, categoryId, money, currencyName, accountId, createTime, place, comment
  </sql>

<!--  按status查找所有的收支记录-->
    <select id="findItemByStatus" resultMap="BaseResultMap">
        select  i.*,a.*,c.*
        from item i,account a,category c
        where i.userId = #{userId} and i.status = #{status} and i.accountId = a.id and i.categoryId = c.id  order by i.createTime DESC ,i.id DESC ;
    </select>

<!--  直接查找所有收支记录-->
  <select id="findAllItem" resultMap="BaseResultMap">
        select  i.*,a.*,c.*
        from item i,account a,category c
        where i.userId = #{userId} and i.accountId = a.id and i.categoryId = c.id  order by i.createTime DESC ,i.id DESC ;
    </select>

<!--  新增收支记录-->
  <insert id="insertItem" keyProperty="id" parameterType="com.family.entity.item">
        INSERT INTO item (status,title,userId,categoryId,money,currencyName,accountId,createTime,place,comment)
         VALUES (#{status},#{title},#{userId},#{categoryId},#{money},#{currencyName},#{accountId},#{createTime},#{place},#{comment})
  </insert>

<!--    根据查询条件查找-->
    <select id="searchItem" resultMap="BaseResultMap">
         select  i.*,a.*,c.*
        from item i,account a,category c
        where i.userId = #{userId} and
         (i.createTime between #{startTime} and #{endTime}) and
         (i.title like '%${title}%' or i.title = '') and
         (i.status=#{status} or #{status}=-1) and
         (i.categoryId = #{categoryId} or #{categoryId} = -1)  and
         i.accountId = a.id and i.categoryId = c.id  order by i.createTime DESC ,i.id DESC ;
    </select>


    <!-- 查询某年的数据所有数据-->
    <select id="findItemByYear" resultMap="BaseResultMap">
         select  i.*,a.*,c.*
        from item i,account a,category c
        where i.userId = #{userId} and
              year(i.createTime) = #{year} and
              i.accountId = a.id and i.categoryId = c.id  order by i.createTime DESC ,i.id DESC ;
    </select>

<!--    查询某年某收支类型的数据-->
    <select id="findItemByStatusAndYear" resultMap="BaseResultMap">
         select  i.*,a.*,c.*
        from item i,account a,category c
        where i.userId = #{userId} and
              i.status = #{status} and
              year(i.createTime) = #{year} and
              i.accountId = a.id and i.categoryId = c.id  order by i.createTime DESC ,i.id DESC ;
    </select>

    <!--  删除记录-->
    <delete id="deleteItem"  parameterType="java.lang.Integer">
          DELETE FROM item WHERE id = #{id}
    </delete>

<!--查询记录总数-->
    <select id="count" resultType="java.lang.Integer" >
        select count(*) from item
    </select>

</mapper>
